/* the following piece of code is not running in my Tablet emulator ************
                    if (dataSize == 0) {
                        //showNotFoundNotification();
                        //super.onBackPressed();
                        if (PopMoviesConstants.DEBUG) Log.i("PopMovies", LOG_TAG + ":" + " data size = 0");
                        return;
                    }

                    //mFilmsList = new ArrayList<Film>(dataSize);


                    Vector<MoviesContentValues> cVVector = new Vector<MoviesContentValues>(dataSize);

                   // Time dayTime = new Time();
                   // dayTime.setToNow();

                    // we start at the day returned by local time. Otherwise this is a mess.
                   // int julianStartDay = Time.getJulianDay(System.currentTimeMillis(), dayTime.gmtoff);

                    // now we work exclusively in UTC
                   // dayTime = new Time();


                    for (int i = 0; i < dataSize; i++)
                    {
                        if (PopMoviesConstants.DEBUG) Log.d("logcat_tag", Integer.toString(i) + "th data in Response ");
                        JSONObject jsonFilm;
                        jsonFilm = data.getJSONObject(i);
                        String DateLocal = jsonFilm.getString(RELEASE_DATE);

                        int IdLocal = jsonFilm.getInt(ID);
                        Boolean AdultLocal = jsonFilm.getBoolean(ADULT);
                        Boolean VideoLocal = jsonFilm.getBoolean(VIDEO);
                        String TitleLocal = jsonFilm.getString(TITLE);
                        String PosterPathLocal = jsonFilm.getString(POSTER_PATH);
                        String OverviewLocal = jsonFilm.getString(OVERVIEW);
                        double PopularityLocal = jsonFilm.getDouble(POPULARITY);
                        String strRatingLocal = jsonFilm.getString(VOTE_AVERAGE);
                        String OriginalTitleLocal = jsonFilm.getString(ORIGINAL_TITLE);
                        String OriginalLanguageLocal = jsonFilm.getString(ORIGINAL_LANGUAGE);
                        double RatingLocal = jsonFilm.getDouble(VOTE_AVERAGE);
                        String BackdropPathLocal = jsonFilm.getString(BACKDROP_PATH);
                        double VoteCountLocal = jsonFilm.getDouble(VOTE_COUNT);

                        Long ReleaseDate = 0L;
                        if (DateLocal != null && !DateLocal.equals("null")&& !DateLocal.equals("")) {
                            ReleaseDate = Utilities.getDateInDBDateformatFromMovieDbDateString(DateLocal);
                        }

                        if (PopMoviesConstants.DEBUG) Log.d("logcat_tag", LOG_TAG + ":" + " creating ContentValues");
                        MoviesContentValues movieValues = new MoviesContentValues();

                        movieValues.putAdult( AdultLocal); // Boolean.TRUE
                        movieValues.putBackdropPath(BackdropPathLocal);
                        movieValues.putMovieId(IdLocal);
                        movieValues.putOriginalLanguage(OriginalLanguageLocal);
                        movieValues.putTitle( TitleLocal);
                        movieValues.putOverview( OverviewLocal);
                        movieValues.putPopularity( PopularityLocal);
                        movieValues.putPosterPath( PosterPathLocal);
                        movieValues.putReleaseDate( ReleaseDate);
                        movieValues.putOriginalTitle(OriginalTitleLocal);
                        movieValues.putVideo( VideoLocal); // Boolean.FALSE
                        movieValues.putVoteAverage( RatingLocal);
                        movieValues.putVoteCount( VoteCountLocal);
                        cVVector.add(movieValues);

                        //Film FilmLocal = new Film(IdLocal, TitleLocal, PosterPathLocal, OverviewLocal, RatingLocal,strRatingLocal, DateLocal);
                        //Log.d("logcat_tag", "The Film [" + Integer.toString(i) + "] Details :=" + FilmLocal.toString());
                        //mFilmsList.add(FilmLocal);

                    }
                    int inserted = 0;
                    // add to database
                    if (cVVector.size() > 0) {
                        if (PopMoviesConstants.DEBUG) Log.d("logcat_tag", LOG_TAG + ":" + " calling bulkinsert");
                        ContentValues[] cvArray = new ContentValues[cVVector.size()];
                        cVVector.toArray(cvArray);
                        inserted = getApplicationContext().getContentResolver().bulkInsert(MoviesColumns.CONTENT_URI, cvArray);
                    }


                    if (PopMoviesConstants.DEBUG) Log.d(LOG_TAG, "PopularMovies Service Complete. " + inserted + " / " + cVVector.size() + " Inserted");

                    */